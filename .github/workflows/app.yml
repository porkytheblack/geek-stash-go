name: Geek Stash App

on:
  push:
    branches: [main, feature/ci-cd-setup]

jobs:
  deploy:
    runs-on: self-hosted

    env:
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_SSLMODE: ${{ secrets.DB_SSLMODE }}
      AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
      AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
      AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      XAUTHKEY: ${{ secrets.XAUTHKEY }}
      GO_ENV: ${{ secrets.GO_ENV }}
      DEV_EMAIL: ${{ secrets.DEV_EMAIL }}

    steps:
    - name: Print out env variables
      run: |
        echo $DB_PORT
        echo $DB_HOST
        echo $DB_NAME
        echo $DB_USER
        echo $DB_PASS
        echo $DB_SSLMODE
        echo $AUTH0_SECRET
        echo $AUTH0_BASE_URL
        echo $AUTH0_ISSUER_BASE_URL
        echo $AUTH0_CLIENT_ID
        echo $AUTH0_CLIENT_SECRET
        echo $XAUTHKEY
        echo $GO_ENV
        echo $DEV_EMAIL
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Docker Compose
      run: bash ./install_docker.sh

    - name: Build and run Docker Compose
      run: |
        sudo docker compose build
        sudo docker compose up -d
