version: '3.3'

services:
  dhparam:
    image: nginx:latest
    volumes:
      - dhparam:/dhparam
    command: >
      sh -c "
        if [ ! -f /dhparam/dhparam.pem ]; then
          openssl dhparam -out /dhparam/dhparam.pem 2048;
        fi
      "

  frontend:
    build:
      context: ./api-frontend
      dockerfile: Dockerfile
      args: 
        - AUTH0_SECRET=${AUTH0_SECRET}
        - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
        - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
        - AUTH0_BASE_URL=${AUTH0_BASE_URL}
        - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
    image: node:18-alpine
    container_name: frontend
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - app-network
    depends_on:
      - backend
  
  backend:
    build:
      context: ./go-backend
      dockerfile: Dockerfile
      args:
        - DB_PORT=${DB_PORT}
        - DB_HOST=${DB_HOST}
        - DB_NAME=${DB_NAME}
        - DB_USER=${DB_USER}
        - DB_PASS=${DB_PASS}
        - DB_SSLMODE=${DB_SSLMODE}
        - AUTH0_SECRET=${AUTH0_SECRET}
        - AUTH0_BASE_URL=${AUTH0_BASE_URL}
        - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
        - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
        - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
        - XAUTHKEY=${XAUTHKEY}
    image: golang:1.20.1-bullseye
    container_name: backend
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - app-network
  
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - dhparam:/etc/ssl/certs
      - web-root:/var/www/html
      - ./nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
      - dhparam
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    environment:
      - DEV_EMAIL=${DEV_EMAIL}
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html -m ${DEV_EMAIL} --agree-tos --no-eff-email -d api.geekstash.doncodes.xyz -d geekstash.doncodes.xyz

volumes:
  certbot-etc:
  certbot-var:
  dhparam:
  web-root:
    driver_opts:
      type: none
      device: /home/ubuntu/runner/_work/geek-stash-go/geek-stash-go/api-frontend/public
      o: bind

networks:
  app-network:
    driver: bridge